pair <char*, vector<char*>> utils::clean(vector<char *> &c){
    char* command= c[0];
    vector<char*> v1;
    int cont=0;
    c.erase(c.begin());
    for(vector<char*>::iterator i = c.begin(); i!=c.end();i++){
        cont++;
        if(*i=="|"){
            break;
        }else {
            v1.push_back(*i);
        }
    }
    c.erase(c.begin(), c.begin()+cont);
    auto p = make_pair(command, v1);
    return p;
}

void utils::pipes(std::string in, command_t c){
    int status;
    int tam=utils::count_pipes(in);
    int pipes[2][2];
    char* com;
    vector<char*> s;
    vector<char*> vec=utils::tocstr(c);
    pair<char*, vector<char*>> dat;
    
    cout<<"PRINCIPIO"<<endl;
    
    for(int i=0;i<vec.size()-1;i++){
		printf("%s\n",vec[i]);
	}
	cout<<endl;

    if(fork()==0){
    cout<<"entra1"<<endl;
        dup2(pipes[0][1], 1);
        for(int i=0;i<tam;i++){
            for(int j=0;j<2;j++){
                close(pipes[i][j]);
            }
        }
	dat=clean(vec);
        com=dat.first;
        s=dat.second;
        //s.push_back(nullptr);
	cout<<"funciona"<<endl;
	
	cout<<"||||||||||||||||"<<endl;
	
	for(int k=0;k<s.size()-1;k++){
		printf("holas1, %s\n",s[k]);
	}
	cout<<endl;
	
	cout<<vec.size()<<endl;
	for(int k=0;k<vec.size()-1;k++){
		printf("holis1, %s\n",vec[k]);
	}
	cout<<endl;
	
        execvp(com,s.data());

    }else{
    	if(fork()==0){
    	cout<<"entra2"<<endl;
            for(int k;k<tam;k++){
               dup2(pipes[0][0], 0);
               dup2(pipes[1][1], 1);
               for(int i=0;i<tam;i++){
                    for(int j=0;j<2;j++){
                        close(pipes[i][j]);
                    }
                }
                dat=clean(vec);
                com=dat.first;
                s=dat.second;
		
	for(int k=0;k<s.size()-1;k++){
		printf("holas2, %s\n",s[k]);
	}
	cout<<endl;
	cout<<vec.size()<<endl;
	for(int k=0;k<vec.size()-1;k++){
		printf("holis2, %s\n",vec[k]);
	}
	cout<<endl;
		
                execvp(com,s.data());
            }
       }else{
          if(fork()==0){
          cout<<"entra3"<<endl;
             dup2(pipes[1][0], 0);
             for(int i=0;i<3;i++){
                for(int j=0;j<2;j++){
                   close(pipes[i][j]);
                }
             }
             
             dat=clean(vec);
             com=dat.first;
             s=dat.second;
             
	for(int k=0;k<s.size()-1;k++){
		printf("holas3, %s\n",s[k]);
	}
	cout<<endl;
	cout<<vec.size()<<endl;
	for(int k=0;k<vec.size()-1;k++){
		printf("holis3, %s\n",vec[k]);
	}
	cout<<endl;
             
             execvp(com,s.data());
           }
        }
        for(int i=0;i<2;i++){
            for(int j=0;j<2;j++){
                close(pipes[i][j]);
            }
        }
        for(int i=0;i<2;i++){
            for(int j=0;j<2;j++){
                wait(&status);
            }
        }
    }
}
